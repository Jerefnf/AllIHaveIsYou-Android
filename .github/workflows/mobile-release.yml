name: Mobile Build & Release

on:
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Modo de compilaci√≥n (release/debug)'
        required: false
        default: 'release'
        type: choice
        options:
          - release
          - debug
      extra_defines:
        description: 'Defines adicionales (separados por espacio, ej: FLX_NO_DEBUG IRIS_DEBUG)'
        required: false
        default: ''
        type: string

permissions:
  contents: write
  discussions: write

env:
  PROJECT_NAME: AllIHaveIsYou
  REPO_PATH: Jerefnf/AllIHaveIsYou-Android

jobs:
  get-commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get_commit_hash.outputs.COMMIT_HASH }}
    steps:
      - name: Check Repository
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "REPO_PATH: ${{ env.REPO_PATH }}"
          if [[ "$GITHUB_REPOSITORY" != "${{ env.REPO_PATH }}" ]]; then
            echo "Doesn't seem to be correct, returning SIGABRT..."
            exit 6
          else
            echo "Seems to be correct..."
          fi

      - name: Get latest commit hash
        id: get_commit_hash
        run: |
          commit_hash=${GITHUB_SHA::7}
          echo "Latest commit hash is $commit_hash"
          echo "::set-output name=COMMIT_HASH::$commit_hash"

  build:
    name: Android
    needs: get-commit-hash
    uses: ./.github/workflows/build.yml
    with:
      name: Android
      os: macos-15
      setupCommand: sh ./setup/unix.sh
      buildArgs: ${{ (inputs.build_mode == 'debug' && 'android -debug') || 'android -final -D officialBuild' }}${{ inputs.extra_defines && format(' -D {0}', join(inputs.extra_defines, ' -D ')) || '' }}
      artifactName: androidBuild
      artifactPath: ${{ (inputs.build_mode == 'debug' && 'export/debug/android/bin/app/build/outputs/apk/debug/*.apk') || 'export/release/android/bin/app/build/outputs/apk/release/*.apk' }}

  Releaser:
    needs: [get-commit-hash, build]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download Android Build
        uses: actions/download-artifact@main
        with:
          name: androidBuild
          path: /home/runner/androidBuild

      - name: List APK files
        run: ls -lhR /home/runner/androidBuild

      - name: Move Android File
        run: |
          APK=$(find /home/runner/androidBuild -type f -name "*.apk" | head -n 1)
          if [ -z "$APK" ]; then
            echo "No APK found!"
            exit 1
          fi
          echo "Found APK at: $APK"
          if [[ "${{ github.event.inputs.build_mode }}" == "debug" ]]; then
            mv "$APK" /home/runner/${{ env.PROJECT_NAME }}-Android-Debug.apk
          else
            mv "$APK" /home/runner/${{ env.PROJECT_NAME }}-Android-Release.apk
          fi

      - name: Publish The Release
        uses: softprops/action-gh-release@v2
        with:
          name: "DevBuild ${{ needs.get-commit-hash.outputs.commit_hash }}"
          tag_name: "devbuild-${{ needs.get-commit-hash.outputs.commit_hash }}"
          prerelease: true
          files: |
            /home/runner/*.apk
